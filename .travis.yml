language: cpp

os:
  #- linux
  - osx
osx_image: xcode8

env:
  matrix:
    # Uncomment when Travis upgraded "Ubuntu 12.04 LTS" to a newer version whose repo will have a more up-to-date libtorrent package
    #- lt_branch=dist gui=true
    #- lt_branch=dist gui=false
    - lt_branch=RC_1_0 qt=5 gui=true qtroot=/usr/local/Cellar/qt5/5.7.0 QT_QMAKE=$qtroot/bin
    #- lt_branch=RC_1_0 qt=5 gui=false
    - lt_branch=RC_1_0 qt=4 gui=true
    #- lt_branch=RC_1_0 qt=4 gui=false
  global:
    - secure: "OI9CUjj4lTb0HwwIZU5PbECU3hLlAL6KC8KsbwohG8/O3j5fLcnmDsK4Ad9us5cC39sS11Jcd1kDP2qRcCuST/glVNhLkcjKkiQerOfd5nQ/qL4JYfz/1mfP5mdpz9jHKzpLUIG+TXkbSTjP6VVmsb5KPT+3pKEdRFZB+Pu9+J8="
    - coverity_branch: coverity_scan

branches:
  except:
    - search_encoding_windows
    - v2_9_x

notifications:
  email:
    on_success: change
    on_failure: change

# container-based builds
#sudo: false
cache:
  ccache: true
  directories:
    - $HOME/hombebrew_cache

# opt-in Ubuntu Trusty
sudo: required
dist: trusty

addons:
  coverity_scan:
    project:
      name: "okeatime/qBittorrent"
      description: "Build submitted via Travis CI"
    build_command_prepend: "./bootstrap.sh && ./configure $qbtconf"
    build_command: make
    branch_pattern: $coverity_branch
  apt:
    #sources:
    # sources list: https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
    #- ubuntu-toolchain-r-test
    #- boost-latest
    packages:
    # packages list: https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise
    - autoconf
    - automake
    - colormake
    - libssl-dev
    - libboost-dev
    - libboost-system-dev
    # uncomment when Travis upgraded "Ubuntu 12.04 LTS" to a newer version whose repo will have a more up-to-date libtorrent package
    #- libtorrent-rasterbar6

before_install:
  # only allow specific build for coverity scan, others will stop
  - if [ "$TRAVIS_BRANCH" = "$coverity_branch" ] && ! [ "$TRAVIS_OS_NAME" = "linux" -a "$lt_branch" = "RC_1_0" -a "$gui" = true ]; then exit ; fi

  - shopt -s expand_aliases
  - alias make="colormake -j3" # Using nprocs/2 sometimes may fail (gcc is killed by system)
  #- libt_path="$HOME/libt_install"
  #- ltconf="$ltconf --prefix="$libt_path" --disable-geoip"
  - qbt_path="$HOME/qbt_install"
  - qbtconf="$qbtconf --prefix="$qbt_path" PKG_CONFIG_PATH="$libt_path/lib/pkgconfig":$PKG_CONFIG_PATH"

  # options for specific branches
  - if [ "$qt" = 4 ]; then qbtconf="$qbtconf --with-qt4" ; fi
  - if [ "$gui" = false ]; then qbtconf="$qbtconf --disable-gui" ; fi
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      # setup virtual display for after_success target
      if [ "$gui" = true ]; then export "DISPLAY=:99.0" && /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16 ; fi ;
    fi
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      qbtconf="$qbtconf --disable-qt-dbus" ;
    fi

  # print settings
  - echo $lt_branch
  - echo $gui
  - echo $ltconf
  - echo $qbtconf

install:
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      # libtorrent
      sudo add-apt-repository --yes ppa:qbittorrent-team/qbittorrent-stable ;
      sudo apt-get update -qq ;
      sudo apt-get install -qq libtorrent-rasterbar-dev ;

      # build libtorrent from source
      #if [ "$lt_branch" != "dist" ]; then
        #cd "$HOME" && pwd && git clone --depth 1 https://github.com/arvidn/libtorrent.git --branch $lt_branch ;
        #cd libtorrent && ./autotool.sh && ./configure $ltconf && make install ;
      #fi ;

      # Qt
      if [ "$qt" = 4 ]; then sudo apt-get -qq install qt4-default libqt4-dev ; fi ;
      if [ "$qt" = 5 ]; then sudo apt-get -qq install qt5-default qtbase5-dev qttools5-dev-tools ; fi ;

      # ccache
      if [ "$TRAVIS_BRANCH" != "$coverity_branch" ]; then
        dpkg-query -L ccache && export use_ccache=true ;
        ccache -V && ccache --show-stats && ccache --zero-stats ;
      fi ;
    fi
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      mkdir -p "$HOME/hombebrew_cache" ;
      wget https://builds.shiki.hu/homebrew/version ;
      if ! cmp --quiet "version" "$HOME/hombebrew_cache/version" ; then
        echo "Cached files are different from server. Downloading new ones." ;
        cp "version" $HOME/hombebrew_cache ;
        cd "$HOME/hombebrew_cache" ;
        wget https://builds.shiki.hu/homebrew/libtorrent-rasterbar.rb ;
        wget https://builds.shiki.hu/homebrew/libtorrent-rasterbar-1.0.10.el_capitan.bottle.tar.gz ;
      fi

      # dependencies
      brew update > /dev/null ;
      brew install colormake ccache ;
      brew outdated "pkg-config" || brew upgrade "pkg-config" ;
      # Copy custom libtorrent bottle to homebrew's cache so it can find and install it
      # Also install our custom libtorrent formula by passing the local path to it
      # These 2 files are restored from Travis' cache.
      cp "$HOME/hombebrew_cache/libtorrent-rasterbar-1.0.10.el_capitan.bottle.tar.gz" "$(brew --cache)" ;
      brew install "$HOME/hombebrew_cache/libtorrent-rasterbar.rb" ;

      # Qt
      if [ "$qt" = 4 ]; then brew install qt; fi ;
      #if [ "$qt" = 5 ]; then brew install -v https://raw.githubusercontent.com/okeatime/homebrew-core/for_qbt/Formula/qt5.rb; fi ;
      if [ "$qt" = 5 ]; then
         brew install -v qt5;
         find $qtroot/plugins -type file -exec chmod +w \{\} \; ;
         find $qtroot/plugins -type file -exec install_name_tool -id \{\} \{\} \; ;
         find $qtroot/lib -type file -exec chmod +w \{\} \; ;
         find $qtroot/lib -type file -print | egrep "([^/]+).framework/Versions/[^/]+/\1$" | xargs -n 1 -I % install_name_tool -id % % ;
      fi ;

      # ccache
      if [ "$TRAVIS_BRANCH" != "$coverity_branch" ]; then
        export PATH="/usr/local/opt/ccache/libexec:$PATH" && export use_ccache=true ;
        ccache -V && ccache --show-stats && ccache --zero-stats ;
      fi ;
    fi

script:
  #- brew install -v https://raw.githubusercontent.com/okeatime/homebrew-core/qt57_qbt/Formula/qt57.rb
  - if [ "$TRAVIS_BRANCH" = "$coverity_branch" ]; then exit ; fi # skip usual build when running coverity scan
  - cd "$TRAVIS_BUILD_DIR" && ./bootstrap.sh && ./configure $qbtconf
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      sed -i "" -e "s/^\(CC.*&&\).*$/\1 $CC/" src/Makefile ;  # workaround for Qt & ccache: https://bugreports.qt.io/browse/QTBUG-31034
      sed -i "" -e "s/^\(CXX.*&&\).*$/\1 $CXX/" src/Makefile ;
      sed -i "" -e 's/^\(CXXFLAGS.*\)$/\1 -Wno-unused-local-typedefs -Wno-inconsistent-missing-override/' src/Makefile ;
    fi
  - make && make install

after_success:
  - if [ "$gui" = true ]; then qbt_exe="qbittorrent" ; else qbt_exe="qbittorrent-nox" ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then cd "$qbt_path/bin" ; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then cd "$TRAVIS_BUILD_DIR/src/" && $QT_QMAKE/macdeployqt "$qbt_exe.app" -dmg && cd "$qbt_exe.app/Contents/MacOS" ; fi
  - ./$qbt_exe --version
  - cd "$TRAVIS_BUILD_DIR"

after_script:
  - if [ "$use_ccache" = true ]; then ccache --show-stats ; fi

deploy:
  provider: releases
  api_key:
    secure: "TGrqb5dLOawLZ53gbDgSnF+jGGEMX1TP8qZHOGCXAOXU/dsZWmqRUd+vS1/X2hlCRglmHfW31IXK6XeAnfbo6OlL15XRa55hkfqo6AoQvGtmiGq6V9WN5kI7hWdkW4+GE8oZnMxxK40iAoTBk5r088MoRJ3gbToXhMV8BJwIOfijQx/1HLz6BeA7mxhGzWZcyD+TL1woWd+ebi+0+6qjAgMRLiAqQvpIjjhDij0EGTR19+T52WccC/MbJp07r70JHlKX652YNdfkAwlUrbJUWjgJ3RPTRxWHdfhottOXA6QYpHyOe5tp0VmpwWIsEO6oNSPCthXJEHHKdM7Gq3bA20Ap2T+r/MXctpU+kEeIV7wxuJP6l333RgbnhyZXUjSKoYeq0+PAt/Ir9AjQxGHPOQPmW82T2ZFgvfF691ofcGvhqQTUN9XGDPq2HScsNHbOCBZxi1yMyhtXDL1SzGCQPHpJphtW9UKg2kE1w3r8DRXhfeHYpH8QH2VWpKXuWoeBZ7roIOPUKG9stnyet3/fnsozXvrNdQT3pfNkpXCMjz4vLyt5oiHBif+kH1tqQRToylvBIbmXH1rA1N9dObq4l1ZGfW0SGNdugQtRcL+d6D1FLL+q6OcZc29zsJzgEqjwa04T2gz7RBHexW34mvbwxoSuzqUaUEjBsdBf9gixUX8="
  file: src/qbittorrent.dmg
  overwite: true
  skip_cleanup: true
  on:
    tags: true

